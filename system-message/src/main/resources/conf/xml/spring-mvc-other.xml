<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/mvc		http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
	http://www.springframework.org/schema/context	http://www.springframework.org/schema/context/spring-context-4.0.xsd
	"
	default-lazy-init="true">

	
	<!-- 扫描注册 -->
	<context:component-scan base-package="com.hua">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>	


<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"/>	

<!-- Bind the return value of the Rest service to the ResponseBody. org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter-->
<bean class ="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" >
	<property name="synchronizeOnSession" value="true"/>
	<property name="messageConverters">
		<list>
			<ref bean="xmlMessageConverter" /> <!-- xml转换器 -->
			<!-- json转换器 -->
			<bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
                   <property name="supportedMediaTypes">  
                       <list>  
                           <value>text/plain;charset=UTF-8</value>  
                           <value>application/json;charset=UTF-8</value>  
                       </list>  
                   </property>  
                   <property name="objectMapper">  
                       <bean class="com.hua.controller.convert.JsonObjectMapper"></bean>  
                   </property> 
			</bean>
			<ref bean="stringHttpMessageConverter" />
		</list>
	</property>
    <property name="customArgumentResolver">
    	<bean class="com.hua.controller.convert.ParameterResolver"/>
    </property>  
</bean>


<!-- 通过替换StringHttpMessageConverter class 解决乱码，将DEFAULT_CHARSET = Charset.forName("UTF-8");设置成utf-8 -->
<bean id="stringHttpMessageConverter" class = "org.springframework.http.converter.StringHttpMessageConverter">
   <property name ="supportedMediaTypes">
      <list>
          <value>text/plain;charset=UTF-8</value>
          <value>text/html;charset=UTF-8</value>
      </list>
    </property>
    <!-- 这句配置使得返回的内容头文件不会有一大串AcceptCharset -->
    <property name="writeAcceptCharset" value="false"/>
</bean>


<!-- Define the OXM marshaller which is used to convert the Objects from/to XML. -->
<bean id="xstreamMarshaller" class="org.springframework.oxm.xstream.XStreamMarshaller">
      <property name="streamDriver" >
             <bean class="com.thoughtworks.xstream.io.xml.DomDriver"/>
          </property>
	  <property name="autodetectAnnotations" ><value>true</value></property>
</bean>

<bean id="xmlMessageConverter" class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
	<constructor-arg ref="xstreamMarshaller" />
</bean>


	<!-- 扫描控制器 (必须放在此文件中) -->
	<context:component-scan base-package="com.hua.controller">
	</context:component-scan>

	<!-- 视图解析 -->

	<!-- 拦截器 -->

	<!-- 对静态资源文件的访问 (方案一) -->
	<mvc:default-servlet-handler />
	
</beans>
